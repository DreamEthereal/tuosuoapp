<?php
//dezend by http://www.yunlu99.com/
echo 'function base64_decode (data) {' . "\r\n" . '    var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";' . "\r\n" . '    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,' . "\r\n" . '        ac = 0,' . "\r\n" . '        dec = "",' . "\r\n" . '        tmp_arr = [];' . "\r\n" . ' ' . "\r\n" . '    if (!data) {' . "\r\n" . '        return data;' . "\r\n" . '    }' . "\r\n" . ' ' . "\r\n" . '    data += \'\';' . "\r\n" . ' ' . "\r\n" . '    do { // unpack four hexets into three octets using index points in b64' . "\r\n" . '        h1 = b64.indexOf(data.charAt(i++));' . "\r\n" . '        h2 = b64.indexOf(data.charAt(i++));' . "\r\n" . '        h3 = b64.indexOf(data.charAt(i++));' . "\r\n" . '        h4 = b64.indexOf(data.charAt(i++));' . "\r\n" . ' ' . "\r\n" . '        bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;' . "\r\n" . ' ' . "\r\n" . '        o1 = bits >> 16 & 0xff;' . "\r\n" . '        o2 = bits >> 8 & 0xff;' . "\r\n" . '        o3 = bits & 0xff;' . "\r\n" . ' ' . "\r\n" . '        if (h3 == 64) {' . "\r\n" . '            tmp_arr[ac++] = String.fromCharCode(o1);' . "\r\n" . '        } else if (h4 == 64) {' . "\r\n" . '            tmp_arr[ac++] = String.fromCharCode(o1, o2);' . "\r\n" . '        } else {' . "\r\n" . '            tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);' . "\r\n" . '        }' . "\r\n" . '    } while (i < data.length);' . "\r\n" . ' ' . "\r\n" . '    dec = tmp_arr.join(\'\');' . "\r\n" . '    dec = this.utf8_decode(dec);' . "\r\n" . ' ' . "\r\n" . '    return dec;' . "\r\n" . '}' . "\r\n" . 'function base64_encode (data) {' . "\r\n" . '    var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";' . "\r\n" . '    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,' . "\r\n" . '        ac = 0,' . "\r\n" . '        enc = "",' . "\r\n" . '        tmp_arr = [];' . "\r\n" . ' ' . "\r\n" . '    if (!data) {' . "\r\n" . '        return data;' . "\r\n" . '    }' . "\r\n" . ' ' . "\r\n" . '    data = this.utf8_encode(data + \'\');' . "\r\n" . ' ' . "\r\n" . '    do { // pack three octets into four hexets' . "\r\n" . '        o1 = data.charCodeAt(i++);' . "\r\n" . '        o2 = data.charCodeAt(i++);' . "\r\n" . '        o3 = data.charCodeAt(i++);' . "\r\n" . ' ' . "\r\n" . '        bits = o1 << 16 | o2 << 8 | o3;' . "\r\n" . ' ' . "\r\n" . '        h1 = bits >> 18 & 0x3f;' . "\r\n" . '        h2 = bits >> 12 & 0x3f;' . "\r\n" . '        h3 = bits >> 6 & 0x3f;' . "\r\n" . '        h4 = bits & 0x3f;' . "\r\n" . ' ' . "\r\n" . '        // use hexets to index into b64, and append result to encoded string' . "\r\n" . '        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);' . "\r\n" . '    } while (i < data.length);' . "\r\n" . ' ' . "\r\n" . '    enc = tmp_arr.join(\'\');' . "\r\n" . '    ' . "\r\n" . '    var r = data.length % 3;' . "\r\n" . '    ' . "\r\n" . '    return (r ? enc.slice(0, r - 3) : enc) + \'===\'.slice(r || 3);' . "\r\n" . '}' . "\r\n" . 'function utf8_encode (argString) {' . "\r\n" . '    if (argString === null || typeof argString === "undefined") {' . "\r\n" . '        return "";' . "\r\n" . '    }' . "\r\n" . ' ' . "\r\n" . '    var string = (argString + \'\'); // .replace(/\\r\\n/g, "\\n").replace(/\\r/g, "\\n");' . "\r\n" . '    var utftext = "",' . "\r\n" . '        start, end, stringl = 0;' . "\r\n" . ' ' . "\r\n" . '    start = end = 0;' . "\r\n" . '    stringl = string.length;' . "\r\n" . '    for (var n = 0; n < stringl; n++) {' . "\r\n" . '        var c1 = string.charCodeAt(n);' . "\r\n" . '        var enc = null;' . "\r\n" . ' ' . "\r\n" . '        if (c1 < 128) {' . "\r\n" . '            end++;' . "\r\n" . '        } else if (c1 > 127 && c1 < 2048) {' . "\r\n" . '            enc = String.fromCharCode((c1 >> 6) | 192) + String.fromCharCode((c1 & 63) | 128);' . "\r\n" . '        } else {' . "\r\n" . '            enc = String.fromCharCode((c1 >> 12) | 224) + String.fromCharCode(((c1 >> 6) & 63) | 128) + String.fromCharCode((c1 & 63) | 128);' . "\r\n" . '        }' . "\r\n" . '        if (enc !== null) {' . "\r\n" . '            if (end > start) {' . "\r\n" . '                utftext += string.slice(start, end);' . "\r\n" . '            }' . "\r\n" . '            utftext += enc;' . "\r\n" . '            start = end = n + 1;' . "\r\n" . '        }' . "\r\n" . '    }' . "\r\n" . ' ' . "\r\n" . '    if (end > start) {' . "\r\n" . '        utftext += string.slice(start, stringl);' . "\r\n" . '    }' . "\r\n" . ' ' . "\r\n" . '    return utftext;' . "\r\n" . '}' . "\r\n" . 'function utf8_decode (str_data) {' . "\r\n" . '    var tmp_arr = [],' . "\r\n" . '        i = 0,' . "\r\n" . '        ac = 0,' . "\r\n" . '        c1 = 0,' . "\r\n" . '        c2 = 0,' . "\r\n" . '        c3 = 0;' . "\r\n" . ' ' . "\r\n" . '    str_data += \'\';' . "\r\n" . ' ' . "\r\n" . '    while (i < str_data.length) {' . "\r\n" . '        c1 = str_data.charCodeAt(i);' . "\r\n" . '        if (c1 < 128) {' . "\r\n" . '            tmp_arr[ac++] = String.fromCharCode(c1);' . "\r\n" . '            i++;' . "\r\n" . '        } else if (c1 > 191 && c1 < 224) {' . "\r\n" . '            c2 = str_data.charCodeAt(i + 1);' . "\r\n" . '            tmp_arr[ac++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));' . "\r\n" . '            i += 2;' . "\r\n" . '        } else {' . "\r\n" . '            c2 = str_data.charCodeAt(i + 1);' . "\r\n" . '            c3 = str_data.charCodeAt(i + 2);' . "\r\n" . '            tmp_arr[ac++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));' . "\r\n" . '            i += 3;' . "\r\n" . '        }' . "\r\n" . '    }' . "\r\n" . ' ' . "\r\n" . '    return tmp_arr.join(\'\');' . "\r\n" . '}';

?>
