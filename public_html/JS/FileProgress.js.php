<?php
//dezend by http://www.yunlu99.com/
if ((ob_get_length() === false) && !ini_get('zlib.output_compression') && (ini_get('output_handler') != 'ob_gzhandler') && (ini_get('output_handler') != 'mb_output_handler')) {
	ob_start('ob_gzhandler');
}

header('Cache-Control: public');
header('Pragma: cache');
$offset = 2592000;
$ExpStr = 'Expires: ' . gmdate('D, d M Y H:i:s', time() + $offset) . ' GMT';
$LmStr = 'Last-Modified: ' . gmdate('D, d M Y H:i:s', filemtime(__FILE__)) . ' GMT';
header($ExpStr);
header($LmStr);
header('Content-Type: text/javascr¨©pt; charset: UTF-8');
echo '/*' . "\r\n" . '	A simple class for displaying file information and progress' . "\r\n" . '	Note: This is a demonstration only and not part of SWFUpload.' . "\r\n" . '	Note: Some have had problems adapting this class in IE7. It may not be suitable for your application.' . "\r\n" . '*/' . "\r\n" . '' . "\r\n" . '// Constructor' . "\r\n" . '// file is a SWFUpload file object' . "\r\n" . '// targetID is the HTML element id attribute that the FileProgress HTML structure will be added to.' . "\r\n" . '// Instantiating a new FileProgress object with an existing file will reuse/update the existing DOM elements' . "\r\n" . 'function FileProgress(file, targetID) {' . "\r\n" . '	this.fileProgressID = file.id;' . "\r\n" . '' . "\r\n" . '	this.opacity = 100;' . "\r\n" . '	this.height = 0;' . "\r\n" . '	' . "\r\n" . '' . "\r\n" . '	this.fileProgressWrapper = document.getElementById(this.fileProgressID);' . "\r\n" . '	if (!this.fileProgressWrapper) {' . "\r\n" . '		this.fileProgressWrapper = document.createElement("div");' . "\r\n" . '		this.fileProgressWrapper.className = "progressWrapper";' . "\r\n" . '		this.fileProgressWrapper.id = this.fileProgressID;' . "\r\n" . '' . "\r\n" . '		this.fileProgressElement = document.createElement("div");' . "\r\n" . '		this.fileProgressElement.className = "progressContainer";' . "\r\n" . '' . "\r\n" . '		var progressCancel = document.createElement("a");' . "\r\n" . '		progressCancel.className = "progressCancel";' . "\r\n" . '		progressCancel.href = "#";' . "\r\n" . '		progressCancel.style.visibility = "hidden";' . "\r\n" . '		progressCancel.appendChild(document.createTextNode(" "));' . "\r\n" . '' . "\r\n" . '		var progressText = document.createElement("div");' . "\r\n" . '		progressText.className = "progressName";' . "\r\n" . '		progressText.appendChild(document.createTextNode(file.name));' . "\r\n" . '' . "\r\n" . '		var progressBar = document.createElement("div");' . "\r\n" . '		progressBar.className = "progressBarInProgress";' . "\r\n" . '' . "\r\n" . '		var progressStatus = document.createElement("div");' . "\r\n" . '		progressStatus.className = "progressBarStatus";' . "\r\n" . '		progressStatus.innerHTML = "&nbsp;";' . "\r\n" . '' . "\r\n" . '		this.fileProgressElement.appendChild(progressCancel);' . "\r\n" . '		this.fileProgressElement.appendChild(progressText);' . "\r\n" . '		this.fileProgressElement.appendChild(progressStatus);' . "\r\n" . '		this.fileProgressElement.appendChild(progressBar);' . "\r\n" . '' . "\r\n" . '		this.fileProgressWrapper.appendChild(this.fileProgressElement);' . "\r\n" . '' . "\r\n" . '		document.getElementById(targetID).appendChild(this.fileProgressWrapper);' . "\r\n" . '	} else {' . "\r\n" . '		this.fileProgressElement = this.fileProgressWrapper.firstChild;' . "\r\n" . '		this.reset();' . "\r\n" . '	}' . "\r\n" . '' . "\r\n" . '	this.height = this.fileProgressWrapper.offsetHeight;' . "\r\n" . '	this.setTimer(null);' . "\r\n" . '' . "\r\n" . '' . "\r\n" . '}' . "\r\n" . '' . "\r\n" . 'FileProgress.prototype.setTimer = function (timer) {' . "\r\n" . '	this.fileProgressElement["FP_TIMER"] = timer;' . "\r\n" . '};' . "\r\n" . 'FileProgress.prototype.getTimer = function (timer) {' . "\r\n" . '	return this.fileProgressElement["FP_TIMER"] || null;' . "\r\n" . '};' . "\r\n" . '' . "\r\n" . 'FileProgress.prototype.reset = function () {' . "\r\n" . '	this.fileProgressElement.className = "progressContainer";' . "\r\n" . '' . "\r\n" . '	this.fileProgressElement.childNodes[2].innerHTML = "&nbsp;";' . "\r\n" . '	this.fileProgressElement.childNodes[2].className = "progressBarStatus";' . "\r\n" . '	' . "\r\n" . '	this.fileProgressElement.childNodes[3].className = "progressBarInProgress";' . "\r\n" . '	this.fileProgressElement.childNodes[3].style.width = "0%";' . "\r\n" . '	' . "\r\n" . '	this.appear();	' . "\r\n" . '};' . "\r\n" . '' . "\r\n" . 'FileProgress.prototype.setProgress = function (percentage) {' . "\r\n" . '	this.fileProgressElement.className = "progressContainer green";' . "\r\n" . '	this.fileProgressElement.childNodes[3].className = "progressBarInProgress";' . "\r\n" . '	this.fileProgressElement.childNodes[3].style.width = percentage + "%";' . "\r\n" . '' . "\r\n" . '	this.appear();	' . "\r\n" . '};' . "\r\n" . 'FileProgress.prototype.setComplete = function () {' . "\r\n" . '	this.fileProgressElement.className = "progressContainer blue";' . "\r\n" . '	this.fileProgressElement.childNodes[3].className = "progressBarComplete";' . "\r\n" . '	this.fileProgressElement.childNodes[3].style.width = "";' . "\r\n" . '' . "\r\n" . '	//var oSelf = this;' . "\r\n" . '	//this.setTimer(setTimeout(function () {' . "\r\n" . '	//	oSelf.disappear();' . "\r\n" . '	//}, 10000));' . "\r\n" . '};' . "\r\n" . 'FileProgress.prototype.setError = function () {' . "\r\n" . '	this.fileProgressElement.className = "progressContainer red";' . "\r\n" . '	this.fileProgressElement.childNodes[3].className = "progressBarError";' . "\r\n" . '	this.fileProgressElement.childNodes[3].style.width = "";' . "\r\n" . '' . "\r\n" . '	//var oSelf = this;' . "\r\n" . '	//this.setTimer(setTimeout(function () {' . "\r\n" . '	//	oSelf.disappear();' . "\r\n" . '	//}, 5000));' . "\r\n" . '};' . "\r\n" . 'FileProgress.prototype.setCancelled = function () {' . "\r\n" . '	this.fileProgressElement.className = "progressContainer";' . "\r\n" . '	this.fileProgressElement.childNodes[3].className = "progressBarError";' . "\r\n" . '	this.fileProgressElement.childNodes[3].style.width = "";' . "\r\n" . '' . "\r\n" . '	var oSelf = this;' . "\r\n" . '	this.setTimer(setTimeout(function () {' . "\r\n" . '		oSelf.disappear();' . "\r\n" . '	}, 2000));' . "\r\n" . '};' . "\r\n" . 'FileProgress.prototype.setStatus = function (status) {' . "\r\n" . '	this.fileProgressElement.childNodes[2].innerHTML = status;' . "\r\n" . '};' . "\r\n" . '' . "\r\n" . '// Show/Hide the cancel button' . "\r\n" . 'FileProgress.prototype.toggleCancel = function (show, swfUploadInstance) {' . "\r\n" . '	this.fileProgressElement.childNodes[0].style.visibility = show ? "visible" : "hidden";' . "\r\n" . '	if (swfUploadInstance) {' . "\r\n" . '		var fileID = this.fileProgressID;' . "\r\n" . '		this.fileProgressElement.childNodes[0].onclick = function () {' . "\r\n" . '			swfUploadInstance.cancelUpload(fileID);' . "\r\n" . '			return false;' . "\r\n" . '		};' . "\r\n" . '	}' . "\r\n" . '};' . "\r\n" . '' . "\r\n" . 'FileProgress.prototype.appear = function () {' . "\r\n" . '	if (this.getTimer() !== null) {' . "\r\n" . '		clearTimeout(this.getTimer());' . "\r\n" . '		this.setTimer(null);' . "\r\n" . '	}' . "\r\n" . '	' . "\r\n" . '	if (this.fileProgressWrapper.filters) {' . "\r\n" . '		try {' . "\r\n" . '			this.fileProgressWrapper.filters.item("DXImageTransform.Microsoft.Alpha").opacity = 100;' . "\r\n" . '		} catch (e) {' . "\r\n" . '			// If it is not set initially, the browser will throw an error.  This will set it if it is not set yet.' . "\r\n" . '			this.fileProgressWrapper.style.filter = "progid:DXImageTransform.Microsoft.Alpha(opacity=100)";' . "\r\n" . '		}' . "\r\n" . '	} else {' . "\r\n" . '		this.fileProgressWrapper.style.opacity = 1;' . "\r\n" . '	}' . "\r\n" . '		' . "\r\n" . '	this.fileProgressWrapper.style.height = "";' . "\r\n" . '	' . "\r\n" . '	this.height = this.fileProgressWrapper.offsetHeight;' . "\r\n" . '	this.opacity = 100;' . "\r\n" . '	this.fileProgressWrapper.style.display = "";' . "\r\n" . '	' . "\r\n" . '};' . "\r\n" . '' . "\r\n" . '// Fades out and clips away the FileProgress box.' . "\r\n" . 'FileProgress.prototype.disappear = function () {' . "\r\n" . '' . "\r\n" . '	var reduceOpacityBy = 15;' . "\r\n" . '	var reduceHeightBy = 4;' . "\r\n" . '	var rate = 30;	// 15 fps' . "\r\n" . '' . "\r\n" . '	if (this.opacity > 0) {' . "\r\n" . '		this.opacity -= reduceOpacityBy;' . "\r\n" . '		if (this.opacity < 0) {' . "\r\n" . '			this.opacity = 0;' . "\r\n" . '		}' . "\r\n" . '' . "\r\n" . '		if (this.fileProgressWrapper.filters) {' . "\r\n" . '			try {' . "\r\n" . '				this.fileProgressWrapper.filters.item("DXImageTransform.Microsoft.Alpha").opacity = this.opacity;' . "\r\n" . '			} catch (e) {' . "\r\n" . '				// If it is not set initially, the browser will throw an error.  This will set it if it is not set yet.' . "\r\n" . '				this.fileProgressWrapper.style.filter = "progid:DXImageTransform.Microsoft.Alpha(opacity=" + this.opacity + ")";' . "\r\n" . '			}' . "\r\n" . '		} else {' . "\r\n" . '			this.fileProgressWrapper.style.opacity = this.opacity / 100;' . "\r\n" . '		}' . "\r\n" . '	}' . "\r\n" . '' . "\r\n" . '	if (this.height > 0) {' . "\r\n" . '		this.height -= reduceHeightBy;' . "\r\n" . '		if (this.height < 0) {' . "\r\n" . '			this.height = 0;' . "\r\n" . '		}' . "\r\n" . '' . "\r\n" . '		this.fileProgressWrapper.style.height = this.height + "px";' . "\r\n" . '	}' . "\r\n" . '' . "\r\n" . '	if (this.height > 0 || this.opacity > 0) {' . "\r\n" . '		var oSelf = this;' . "\r\n" . '		this.setTimer(setTimeout(function () {' . "\r\n" . '			oSelf.disappear();' . "\r\n" . '		}, rate));' . "\r\n" . '	} else {' . "\r\n" . '		this.fileProgressWrapper.style.display = "none";' . "\r\n" . '		this.setTimer(null);' . "\r\n" . '	}' . "\r\n" . '};';

?>
